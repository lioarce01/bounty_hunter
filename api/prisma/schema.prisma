generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id                 String     @id @default(auto()) @map("_id") @db.ObjectId
  name               String
  email              String     @unique
  role               Role       @default(HUNTER)
  status             UserStatus @default(ENABLED)
  companyName        String?
  companyDescription String?
  companyURL         String?

  bounties Bounty[] @relation("UserBounties")

  reports Report[] @relation("UserReports")
}

model Bounty {
  id          String       @id @default(auto()) @map("_id") @db.ObjectId
  title       String
  description String
  reward      Int
  status      BountyStatus @default(OPEN)
  category String

  userId  String @db.ObjectId
  company User   @relation("UserBounties", fields: [userId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  reports   Report[] @relation("BountyReports")
}

model Report {
  id String @id @default(auto()) @map("_id") @db.ObjectId

  bountyId String @db.ObjectId
  bounty   Bounty @relation("BountyReports", fields: [bountyId], references: [id], onDelete: Cascade)

  hunterId String @db.ObjectId
  hunter   User   @relation("UserReports", fields: [hunterId], references: [id], onDelete: Cascade)

  details  String
  evidence String
  status   ReportStatus @default(PENDING)

  createdAt DateTime @default(now())
}

enum Role {
  COMPANY
  HUNTER
  ADMIN
}

enum ReportStatus {
  PENDING
  APPROVED
  REJECTED
}

enum BountyStatus {
  OPEN
  CLOSED
  EXPIRED
}

enum UserStatus {
  ENABLED
  DISABLED
}
